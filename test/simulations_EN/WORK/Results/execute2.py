import analsim
reload(analsim)
an = analsim.analsim()

# Analisis final para los errores en ks del MAG_APER2
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi01-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi02-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi03-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi04-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi05-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi06-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi07-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi08-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi09-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi10-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi11-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,5,0,5)

# Analisis final para los errores en j del MAG_APER2
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi02-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi03-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi04-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi05-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi06-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi07-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi08-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi09-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi10-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi11-j-simnr.cat",16,24,64, 1.0,8,10,100,20,5,0,5)

# Analisis final para MAG_BEST en ks.
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi01-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi02-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi03-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi04-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi05-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi06-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi07-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi08-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi09-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi10-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi11-ks-simnr.cat",15,23,64, 1.0,8,10,100,20,4,0,4)

# Analisis final para MAG_BEST en j.
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi02-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi03-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi04-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi05-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi06-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi07-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi08-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi09-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi10-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
#a,b,c,d,e,f,g,h,i = an.bidimap("groth_wi11-j-simnr.cat",16,24,64, 1.0,8,10,100,20,4,0,4)
